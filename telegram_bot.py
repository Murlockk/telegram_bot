import telebot
import time
from telebot import types

from main import main_func
from utils import PopularCoin, ConvertionException
from config import TOKEN, support_text, remark


bot = telebot.TeleBot(TOKEN)


@bot.message_handler(commands=['start'])
def start(message: telebot.types.Message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = types.KeyboardButton("BTC - USD")
    btn2 = types.KeyboardButton("ETH - USD")
    btn3 = types.KeyboardButton("USD - RUB")
    btn4 = types.KeyboardButton("EUR - RUB")
    btn5 = types.KeyboardButton("conversion_info")
    markup.add(btn5, btn1, btn2, btn3, btn4)
    text = f'üëã –ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {message.from_user.first_name}! –ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –∫–æ–Ω–≤–µ—Ä—Ç–æ—Ä–æ–º –≤–∞–ª—é—Ç –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É ' \
           f'–±–æ—Ç—É –≤ —É–¥–æ–±–Ω–æ–º –í–∞–º —Ñ–æ—Ä–º–∞—Ç–µ. \n–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –æ–±—â–µ–ø—Ä–∏–Ω—è—Ç—ã–µ –Ω–∞–∑–≤–∞–Ω–∏—è –∏–ª–∏ –æ–±–æ–∑–Ω–∞—á–µ–Ω–∏—è –≤–∞–ª—é—Ç –∏ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç.\n' \
           f'–ò–º–µ—é—Ç—Å—è –ø—Ä–æ–±–ª–µ–º—ã —Å –≤–≤–æ–¥–æ–º: –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ /help ' \
           f'–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø–æ–ø—É–ª—è—Ä–Ω—ã–µ –º–æ–Ω–µ—Ç—ã: –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ /values'
    bot.reply_to(message, text, reply_markup=markup)


@bot.message_handler(commands=['values'])
def values(message: telebot.types.Message):
    bot.reply_to(message, PopularCoin.values_func())


@bot.message_handler(commands=['help'])
def values(message: telebot.types.Message):
    text = support_text + remark
    bot.reply_to(message, text)


@bot.message_handler(content_types=['text'])
def convert(message: telebot.types.Message):
    if message.text == "BTC - USD":
        text = "BTC - USD"
    elif message.text == "ETH - USD":
        text = "ETH - USD"
    elif message.text == "USD - RUB":
        text = "USD - RUB"
    elif message.text == "EUR - RUB":
        text = "EUR - RUB"
    elif message.text == "conversion_info":
        text = "more"
    else:
        text = message.text
    compilation = text.split(' ')
    try:
        result = main_func(compilation)
        if type(result) == list:
            info_func(message, result)
        else:
            bot.send_message(message.chat.id, result)
    except ConvertionException as er:
        bot.send_message(message.chat.id, str(er))


def info_func(message: telebot.types.Message, result):
    if result[0] in PopularCoin.keys.keys():
        text = f'–ù–∞ –≥—Ä–∞—Ñ–∏–∫–µ –ø–æ–∫–∞–∑–∞–Ω–æ –æ—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–æ—á–Ω–æ–µ –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Ä—ã–Ω–æ—á–Ω–æ–π —Å—Ç–æ–∏–º–æ—Å—Ç–∏ {result[0]} –≤ –¥–æ–ª–ª–∞—Ä–∞—Ö –°–®–ê –∑–∞ ' \
               f'–ø–æ—Å–ª–µ–¥–Ω–∏–µ 7 –¥–Ω–µ–π'
        bot.send_photo(message.chat.id,
                       f'https://images.cryptocompare.com/sparkchart/{result[0]}/USD/latest.png?ts=1677232800')
    else:
        text = '–ì—Ä–∞—Ñ–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –∑–∞ 7 –¥–Ω–µ–π –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω –¥–ª—è –¥–µ–Ω–µ–∂–Ω—ã—Ö –≤–∞–ª—é—Ç'  # –ò—Å—Ç–æ—á–Ω–∏–∫ —Å jpeg –Ω–µ –Ω–∞–π–¥–µ–Ω
    bot.send_message(message.chat.id, text)
    for _ in range(4):
        bot.send_message(message.chat.id, result.pop())


while True:
    try:
        bot.polling(none_stop=True)

    except Exception as e:
        print(e)
        time.sleep(5)
